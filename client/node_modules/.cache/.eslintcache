[{"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/index.js":"1","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/reportWebVitals.js":"2","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/App.js":"3","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/GlobalContext.js":"4","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/Page.js":"5","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/context/UserContext.js":"6","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/context/CreatorContext.js":"7","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/index.js":"8","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/CreateScreen.js":"9","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/JoinScreen.js":"10","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/NameScreen.js":"11","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/SignUp.js":"12","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/StartScreen.js":"13","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/SavedGames.js":"14","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/UserInfo.js":"15","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/CreateGame.js":"16","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/CreatorPage.js":"17","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/Login.js":"18","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/Game.js":"19","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/HostGame.js":"20","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/Quiz.js":"21","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/Box.js":"22","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/index.js":"23","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/GameHeader.js":"24","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/UserName.js":"25","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/JoinForm.js":"26","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/BackButton.js":"27","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/UserScore.js":"28","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/Nav.js":"29","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/GameButton.js":"30","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/UserRank.js":"31","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/QuizBox.js":"32","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/NameForm.js":"33","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/QuestionBox.js":"34","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/GameButtons.js":"35","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/ManageGames.js":"36"},{"size":559,"mtime":1618952957920,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1618952957920,"results":"39","hashOfConfig":"38"},{"size":727,"mtime":1619539224711,"results":"40","hashOfConfig":"38"},{"size":108,"mtime":1618952957916,"results":"41","hashOfConfig":"38"},{"size":2130,"mtime":1619571159474,"results":"42","hashOfConfig":"38"},{"size":105,"mtime":1619057196814,"results":"43","hashOfConfig":"38"},{"size":111,"mtime":1619196207927,"results":"44","hashOfConfig":"38"},{"size":661,"mtime":1619435650414,"results":"45","hashOfConfig":"38"},{"size":330,"mtime":1619228774279,"results":"46","hashOfConfig":"38"},{"size":356,"mtime":1618952957919,"results":"47","hashOfConfig":"38"},{"size":355,"mtime":1618952957919,"results":"48","hashOfConfig":"38"},{"size":2645,"mtime":1619634797401,"results":"49","hashOfConfig":"38"},{"size":269,"mtime":1618952957919,"results":"50","hashOfConfig":"38"},{"size":1167,"mtime":1619365917321,"results":"51","hashOfConfig":"38"},{"size":1163,"mtime":1618954339392,"results":"52","hashOfConfig":"38"},{"size":806,"mtime":1619571159477,"results":"53","hashOfConfig":"38"},{"size":5508,"mtime":1619571237844,"results":"54","hashOfConfig":"38"},{"size":3496,"mtime":1619571159478,"results":"55","hashOfConfig":"38"},{"size":1909,"mtime":1619414755800,"results":"56","hashOfConfig":"38"},{"size":5430,"mtime":1619571159478,"results":"57","hashOfConfig":"38"},{"size":5663,"mtime":1619571814163,"results":"58","hashOfConfig":"38"},{"size":440,"mtime":1618952957917,"results":"59","hashOfConfig":"38"},{"size":602,"mtime":1619388511869,"results":"60","hashOfConfig":"38"},{"size":341,"mtime":1618952957917,"results":"61","hashOfConfig":"38"},{"size":153,"mtime":1618952957918,"results":"62","hashOfConfig":"38"},{"size":1544,"mtime":1619056793285,"results":"63","hashOfConfig":"38"},{"size":358,"mtime":1618952957917,"results":"64","hashOfConfig":"38"},{"size":157,"mtime":1618952957918,"results":"65","hashOfConfig":"38"},{"size":571,"mtime":1618955798325,"results":"66","hashOfConfig":"38"},{"size":227,"mtime":1619056793282,"results":"67","hashOfConfig":"38"},{"size":602,"mtime":1619228774279,"results":"68","hashOfConfig":"38"},{"size":2080,"mtime":1619454995447,"results":"69","hashOfConfig":"38"},{"size":1492,"mtime":1619369027591,"results":"70","hashOfConfig":"38"},{"size":9414,"mtime":1619414755799,"results":"71","hashOfConfig":"38"},{"size":1215,"mtime":1619414755798,"results":"72","hashOfConfig":"38"},{"size":1198,"mtime":1619454457236,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"4fx1dz",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"76"},"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/index.js",[],["157","158"],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/reportWebVitals.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/App.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/GlobalContext.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/Page.js",["159"],"import { React, useState, useContext } from 'react';\nimport GlobalContext from './GlobalContext';\nimport { Quiz, CreateScreen, CreatorPage, Game, JoinScreen, Login, NameScreen, SignUp, StartScreen, CreateGame, SavedGames, StartGame, UserInfo, HostGame } from './pages';\nimport UserContext from './context/UserContext';\nimport CreatorContext from './context/CreatorContext';\n\nfunction Page() {\n    const { page } = useContext(GlobalContext);\n    // const page = \"hostgame\";\n    // const { user_obj, setUserObj } = React.useContext(UserObjContext);\n    const [username, setUsername] = useState('');\n    const [roomcode, setRoomcode] = useState('');\n    const [creator, setCreator] = useState('');\n    const [editCode, setEditCode] = useState('');\n    const userContInfo = { username, roomcode, setUsername, setRoomcode }\n    const creatorContInfo = { creator, setCreator, editCode, setEditCode }\n\n    return (\n        <div>\n            {page === \"start\" && ((<StartScreen></StartScreen>))} {/*<Quiz></Quiz>*/}\n            {page === \"create\" && (<CreateScreen></CreateScreen>)} {/*(<HostGame></HostGame>)*/}\n            <UserContext.Provider value={userContInfo}>\n                {page === \"join\" && (<JoinScreen></JoinScreen>)}\n                {page === \"name\" && (<NameScreen></NameScreen>)}\n                {page === \"game\" && (<Game></Game>)}\n            </UserContext.Provider>\n            <CreatorContext.Provider value={creatorContInfo}>\n                {page === \"hostgame\" && (<HostGame></HostGame>)}\n                {page === \"login\" && (<Login></Login>)}\n                {page === \"sign up\" && (<SignUp></SignUp>)}\n                {page === \"creator_home\" && (<CreatorPage></CreatorPage>)}\n                {/* {page === \"create_game\" && (<CreateGame></CreateGame>)} */}\n                {page === \"quiz\" && (<Quiz></Quiz>)}\n                {page === \"manage/start games\" && (<StartGame></StartGame>)}\n                {page === \"user_info\" && (<UserInfo></UserInfo>)}\n                {page === \"saved_games\" && (<SavedGames></SavedGames>)}\n            </CreatorContext.Provider>\n        </div>\n    );\n}\n\nexport default Page;","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/context/UserContext.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/context/CreatorContext.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/index.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/CreateScreen.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/JoinScreen.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/NameScreen.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/SignUp.js",["160","161","162","163"],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/StartScreen.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/SavedGames.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/UserInfo.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/CreateGame.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/CreatorPage.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"import { Nav } from '../items';\nimport React, { useContext, useEffect, createContext, useState } from 'react'\nimport GlobalContext from '../GlobalContext';\nimport CreatorContext from '../context/CreatorContext';\n// import { QuizBox, Box } from '../items';\nimport UserContext from '../context/UserContext';\nimport { useSpring, animated } from 'react-spring';\nimport Quiz from './Quiz';\n\n\nconst QuizzesContext = createContext();\n\n\n// import React from 'react';\n\nfunction QuizBox(props) {\n    const i = props.index;\n    const { quizzes, setQuizzes, setPopup, setPopIndex } = useContext(QuizzesContext);\n\n    const click = () => {\n        setPopIndex(i)\n        setPopup(true);\n    }\n\n    const [iconsVis, setIconsVis] = useState(false);\n    // onMouseOver={setIconsVis(true)} onMouseLeave={setIconsVis(false)}\n\n    // iconVis, NOT 'true'\n    const enterRight = useSpring({ transform: iconsVis ? 'translate3d(0px,0px,0px)' : 'translate3d(300px,0px,0px)' });\n    // style={enterRight}\n\n    return (\n        <div className='question' onMouseOver={() => setIconsVis(true)} onMouseLeave={() => setIconsVis(false)}>\n            <p className='qTitle'> {quizzes[i].name} </p>\n            {/* <input type='text' value={quiz.name} onChange={(e) => handleNameChange(e.target.value)}></input> */}\n\n            {/* {iconsVis && (\n                <div className='icons' >\n                    <Icon sym={'S'}></Icon>\n                    <Icon sym={'E'}></Icon>\n                    <Icon sym={'D'}></Icon>\n                </div>\n            )} */}\n            <animated.div className='icons' style={enterRight} >\n                <Icon sym={'S'} i={i} code = {props.code}></Icon>\n                <Icon sym={'E'} i={i} code = {props.code}></Icon>\n                <Icon sym={'D'} i={i} code = {''}></Icon>\n            </animated.div>\n        </div>\n    );\n}\n\nfunction Icon(props) {\n    const { quizzes, setQuizzes } = useContext(QuizzesContext);\n    const { setEditCode } = useContext(CreatorContext);\n    const { setPage, socket } = useContext(GlobalContext);\n\n    const sym = props.sym;\n    const i = props.i;\n    const id = sym.toLowerCase();\n\n    let icon = sym === 'S' ? 'play_arrow' : 'edit';\n    icon = sym === 'D' ? 'delete' : icon;\n\n    const click = async () => {\n        const name = quizzes[i].name;\n        const code = quizzes[i].code;\n        if (sym === 'S') {\n            console.log(`Start quiz ${name}`);\n        }\n    \n        else if (sym === 'E') {\n            console.log(`Edit quiz ${name}`)\n            await setEditCode(code);\n            console.log('set edit code to ' + code);\n\n            setPage('quiz');\n        }\n        else if (sym === 'D') {\n            let temp = JSON.parse(JSON.stringify(quizzes));\n            socket.emit('deleteQuiz', code);\n            console.log(`Delete quiz ${name}`);\n            temp.splice(i, 1);\n            setQuizzes(temp);\n        }\n    }\n\n    \n    return (\n        <div id={id} onClick={click} className='icon'>\n            <i className=\"material-icons\">{icon}</i>\n        </div>\n    )\n}\n\nconst AddQuiz = () => {\n    const { socket, page, setPage } = useContext(GlobalContext);\n    const { quizzes, setQuizzes, setPopup, setPopIndex } = useContext(QuizzesContext);\n    const { creator } = useContext(CreatorContext);\n    const add = () => {\n        let temp = JSON.parse(JSON.stringify(quizzes));\n        console.log(`Create new quiz`);\n        socket.emit('createQuiz', creator);\n    };\n    return (\n        <div className='icon' onClick={add}>\n            <i className=\"material-icons\">add</i>\n        </div>\n    )\n};\n\nfunction CreatorPage(props) {\n    const { socket, page, setPage } = useContext(GlobalContext);\n    const { creator, setEditCode } = useContext(CreatorContext);\n\n    // const [quizzes, setQuizzes] = useState([\n    //     { name: '330 Quiz 1', code: '0214' },\n    //     { name: '217 Quiz 2', code: '1623' },\n    //     { name: 'Basic Facts', code: '1234' }\n    // ]);\n    const [quizzes, setQuizzes] = useState();\n\n    // if (!quizzes || (quizzes && !quizzes[0].hasOwnProperty('name'))) {\n    useEffect(() => {\n        // console.log(\"hmm\");\n        socket.emit('getQuizNamesById', creator);\n        // setQuizzes([{}]\n    }, []);\n\n    useEffect(() => {\n        socket.on('quizCreated', async (code) => {\n            await setEditCode(code);\n            console.log('set edit code to ' + code);\n            setPage('quiz');\n        });\n    }, [socket, setEditCode]);\n\n    // else {\n    //     console.log(quizzes[0].name);\n    // }\n\n    useEffect(() => {\n        socket.on('getQuizNamesById', async (data) => {\n            setQuizzes(data);\n            console.log('got it at least');\n            console.log(data);\n        });\n    }, [socket, setQuizzes]);\n\n    let quizMap;\n    if (quizzes) {\n        quizMap = quizzes;\n    }\n    else {\n        quizMap = [{}];\n    }\n    let allQuizzes = quizMap.map((quiz, index) => {\n        return <QuizBox key={index} index={index}></QuizBox>\n    });\n\n\n    const cont = { quizzes, setQuizzes }\n\n    return (\n        <QuizzesContext.Provider value={cont}>\n            <div className='questions'>\n                {/* <Box just='left' name='Create a Game'></Box>\n                <Box just='right' name='Manage/Start Games'></Box> */}\n                {quizzes && allQuizzes}\n                {/* {popup && <Popup></Popup>} */}\n                <AddQuiz></AddQuiz>\n                <br></br>\n                <br></br>\n            </div>\n        </QuizzesContext.Provider>\n    );\n}\n\nexport default CreatorPage;","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/Login.js",["178","179"],"import { React, useEffect, useState, useContext } from 'react';\nimport { BackButton } from '../items'\nimport GlobalContext from '../GlobalContext'\nimport CreatorContext from '../context/CreatorContext'\nimport firebase from 'firebase'\n\n\n// const firebaseConfig = {\n//     apiKey: \"AIzaSyDurndzEwOnC_F37eV3DlqtubC8CLfa4cg\",\n//     authDomain: \"quiz-d961a.firebaseapp.com\",\n//     projectId: \"quiz-d961a\",\n//     storageBucket: \"quiz-d961a.appspot.com\",\n//     messagingSenderId: \"939117159928\",\n//     appId: \"1:939117159928:web:48013a6452deae99a3a20d\",\n//     measurementId: \"G-EBC41P964R\"\n// };\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDjMUfS5yidejhhj7GouigAs1Af2_sjCMI\",\n    authDomain: \"quiz-game-4f35d.firebaseapp.com\",\n    projectId: \"quiz-game-4f35d\",\n    storageBucket: \"quiz-game-4f35d.appspot.com\",\n    messagingSenderId: \"315908970854\",\n    appId: \"1:315908970854:web:b211ddaea2b1c1d77250a7\",\n    measurementId: \"G-THCX4VKE2D\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth()\n\nfunction Login() {\n    const [failure, setFailure] = useState(false);\n    const [pass, setPass] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const { setPage, socket } = useContext(GlobalContext);\n    const { setCreator } = useContext(CreatorContext);\n\n    function handleEmailChange(e) {\n        // console.log(\"set email to \" + e.target.value)\n        setEmail(e.target.value);\n    }\n    function handlePassChange(e) {\n        // console.log(\"set pass to \" + e.target.value)\n        setPass(e.target.value);\n    }\n    function handleLogin(e) {\n        //What to put here slash how do we access user and pass from up there\n\n        console.log(email);\n        console.log(pass);\n        e.preventDefault();\n        // socket.emit('login', {'email': email, 'pass': pass});\n\n        // setPage('creator_home');\n\n        auth.signInWithEmailAndPassword(email, pass)\n            .then(userInfo => {\n\n                console.log(userInfo);\n                console.log(userInfo.user.uid)\n                setCreator(userInfo.user.uid)\n                setPage('creator_home');\n            })\n            .catch((error) => {\n                setFailure(true);\n                console.log(error.message);\n\n            })\n    }\n\n    // useEffect(() => {\n    //     socket.on(\"login\", function (data) {\n    //         // console.log(data);\n    //         if (data.login_bool == true) {\n    //             console.log(data);\n    //             setPage('creator_home') //Need to set the new page here because this is asynchronous!!!!! Was firing before this completed before\n    //             // return;\n    //         }\n    //         else {\n    //             console.log('invalid sign in becase...' + data.err_message)\n    //         }\n    //     });\n\n    // }, [socket, setPage]);\n\n    return (\n        <div className=\"loginForm\">\n            <form id='login_form'>\n                <input id=\"email\" placeholder=\"Email\" onChange={n => handleEmailChange(n)} type=\"text\"></input>\n                <br></br>\n                <input id=\"pass\" placeholder=\"Password\" onChange={n => handlePassChange(n)} type=\"password\"></input>\n                <br></br>\n                <input id=\"sign_in\" type=\"submit\" value=\"Login\" onClick={n => handleLogin(n)}></input>\n                {failure && <p className=\"formFailure\">Invalid Email/Password</p>}\n            </form>\n            <BackButton page='create'> </BackButton>\n        </div>\n    )\n}\n\nexport default Login;","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/Game.js",["180","181"],"import { React, useContext, useEffect, useState } from 'react';\nimport { GameHeader, GameButtons } from '../items';\nimport UserContext from '../context/UserContext';\nimport GlobalContext from '../GlobalContext';\n\nfunction InGame(props) {\n    return (\n        <div>\n            <GameHeader name={props.username} rank={props.rank} score={props.score}></GameHeader>\n            <GameButtons clicked={props.clicked} buttonClick={n => props.click(n)}></GameButtons>\n        </div>\n    )\n}\n\nfunction Waiting(props) {\n    return (\n        <div className='waiting'>\n            <GameHeader name={props.username} rank={props.rank} score={props.score}></GameHeader>\n            <br></br><br></br>\n            <strong id='message'>{props.message}</strong>\n        </div>\n    )\n}\n\nfunction Game(props) {\n    const [clicked, setClicked] = useState(\"\");\n    const [playing, setPlaying] = useState(false);\n    const [rank, setRank] = useState('1');\n    const [score, setScore] = useState('0');\n    const { socket } = useContext(GlobalContext);\n    const { username } = useContext(UserContext);\n    const [corr, setCorr] = useState(-1);\n\n    useEffect(() => {\n        socket.on('startGame', ({ c }) => {\n            setCorr(c);\n            setClicked(\"\");\n            setPlaying(true);\n        });\n    }, [socket, setPlaying]);\n\n    const userClick = ((n) => {\n        if (clicked === \"\") {\n            setClicked(n);\n            console.log(corr + ' ' + n);\n            let correct = corr === n;\n            socket.emit('userClick', { user: username, ans: correct });\n        }\n    });\n\n    return (\n        <div>\n            {playing && (<InGame username={username} rank={rank} score={score} clicked={clicked} click={n => userClick(n)}></InGame>)}\n            {!playing && (<Waiting username={username} rank={rank} score={score} message={\"The game will begin soon!\"}></Waiting>)}\n        </div>\n    )\n}\nexport default Game;","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/HostGame.js",["182"],"\nimport React, { useState, useContext } from 'react';\nimport GlobalContext from '../GlobalContext';\n\nfunction HostGameHeader(props) {\n    return (\n        <div className=\"hostGameHeader\">\n            <p>{props.text}</p>\n        </div>\n    )\n}\n\nfunction GameChoice(props) {\n    return (\n        <div className=\"gameChoice\" id={props.id}>\n            <p>{`${props.name}: ${props.text}`}</p>\n        </div>\n    )\n}\n\nfunction GameChoices(props) {\n    const choices = props.choices;\n    console.log(choices);\n    if (props.correct === \"\") {\n        return (\n            <div className='gameChoices'>\n                <GameChoice name=\"A\" text={choices[0]} id=\"A\"></GameChoice>\n                <GameChoice name=\"B\" text={choices[1]} id=\"B\"></GameChoice>\n                <GameChoice name=\"C\" text={choices[2]} id=\"C\"></GameChoice>\n                <GameChoice name=\"D\" text={choices[3]} id=\"D\"></GameChoice>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className='gameChoices'>\n                <GameChoice name=\"A\" text={choices[0]} id={\"A\" === props.correct ? \"A\" : \"O\"}></GameChoice>\n                <GameChoice name=\"B\" text={choices[1]} id={\"B\" === props.correct ? \"B\" : \"O\"}></GameChoice>\n                <GameChoice name=\"C\" text={choices[2]} id={\"C\" === props.correct ? \"C\" : \"O\"}></GameChoice>\n                <GameChoice name=\"D\" text={choices[3]} id={\"D\" === props.correct ? \"D\" : \"O\"}></GameChoice>\n            </div>\n        );\n    }\n}\n\nfunction InGame(props) {\n    const data = props.data;\n    console.log(data);\n    const [correct, setCorrect] = useState('');\n    return (\n        <div>\n            <HostGameHeader text={data.q}></HostGameHeader>\n            <GameChoices correct={correct} choices={data.a}></GameChoices>\n        </div >\n    )\n}\n\nfunction rankify(place) {\n    let dig = parseInt(place, 10) % 10;\n    let end;\n    switch (dig) {\n        case '':\n            end = '';\n            break;\n        case 1:\n            end = \"st\";\n            break;\n        case 2:\n            end = \"nd\";\n            break;\n        case 3:\n            end = \"rd\";\n            break;\n        default:\n            end = \"th\";\n            break;\n    }\n    return place + end;\n}\n\nfunction PlayerRank(props) {\n    return (\n        <div className='playerRank'>\n            <span className='rank'>{props.rank}</span>\n            <span className='name'>{props.name}</span>\n            <span className='score'>{props.score}</span>\n        </div>\n    );\n}\n\nfunction PlayerBox(props) {\n    if (props.id === \"startBtn\") {\n        return (\n            <div onClick={props.click} id={props.id} className='playerBox'>\n                <p>{props.name}</p>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className='playerBox'>\n                <p>{props.name}</p>\n            </div>\n        );\n    }\n}\n\nfunction Scores(props) {\n    const data = props.data;\n    let places = data.map((user, index) => {\n        return <PlayerRank key={index} rank={rankify(index + 1)} name={user.name} score={user.score}></PlayerRank>\n    });\n\n    return (\n        <div>\n            <HostGameHeader text={'Scores'}></HostGameHeader>\n            <div className='playerRanks'>\n                {places}\n            </div>\n        </div>\n    );\n}\n\nfunction Wait(props) {\n    const data = props.data;\n    console.log(\"Waiting...\")\n    // console.log(data);\n    let users;\n    if (data) {\n        users = data.map((user, index) => {\n            return <PlayerBox key={index} name={user.name}></PlayerBox>\n        });\n    }\n\n    return (\n        <div>\n            <HostGameHeader text={`Join with code: ${props.code}`}></HostGameHeader>\n            {/* <div onClick={props.click}>Start</div> */}\n            <div className='playerBoxes'>\n                <PlayerBox click={props.click} id=\"startBtn\" name=\"Start\"></PlayerBox>\n                {users}\n            </div>\n        </div>\n    )\n}\n\nfunction HostGame() {\n    const { socket } = useContext(GlobalContext);\n\n    const [qs, setQs] = useState();\n    const code = '1234';\n\n\n    socket.emit('hostGame', code);\n\n    const [data, setData] = useState();\n    //     { name: \"Nick\", score: 120 },\n    //     { name: \"Jason\", score: 110 },\n    //     { name: \"Paul\", score: 50 },\n    //     { name: \"Nash\", score: 20 },\n    //     { name: \"Max\", score: 10 },\n    //     { name: \"Sasha\", score: 8 },\n    //     { name: \"Michael\", score: 8 },\n    //     { name: \"Kyle\", score: 6 },\n    //     { name: \"Pranay\", score: 1 }\n    // ]);\n    // console.log(data)\n    const [mode, setMode] = useState('wait');\n    const startGame = () => {\n        socket.emit('startGame', { code: code });\n        // setMode('play');\n    };\n    useState(() => {\n        socket.on('startGame', (question) => {\n            setQs({ q: question.q, a: question.a });\n            setMode('play');\n        });\n    }, [socket, setMode]);\n    useState(() => {\n        socket.on('playerChange', ({ players }) => {\n            console.log(players);\n            setData(players);\n        });\n    }, [socket, setData]);\n    if (mode === 'play') {\n        return (\n            <InGame data={qs}></InGame>\n        );\n    }\n    else if (mode === 'scores') {\n        return (\n            <Scores data={data}></Scores>\n        );\n    }\n    else if (mode === 'wait') {\n        return (\n            <Wait data={data} code={code} click={startGame}></Wait>\n        );\n    }\n}\n\nexport default HostGame;","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/Quiz.js",["183","184","185","186","187","188","189"],"import React, { useState, useEffect, useContext, createContext } from 'react';\nimport GlobalContext from '../GlobalContext';\nimport CreatorContext from '../context/CreatorContext';\n\nconst QuizContext = createContext();\n\nfunction Question(props) {\n    const i = props.index;\n    const { quiz, setQuiz } = useContext(QuizContext);\n    // let question = props.question;\n    // console.log(question);\n    const handleChange = (field, change) => {\n        let temp = JSON.parse(JSON.stringify(quiz));\n        temp.questions[i][field] = change;\n        setQuiz(temp);\n    };\n\n    const deleteQuestion = (index) => {\n        let temp = JSON.parse(JSON.stringify(quiz));\n        console.log(`We want to delete ${index}`);\n        temp.questions.splice(index, 1);\n        setQuiz(temp);\n    }\n\n\n\n    return (\n\n        <div className='question'>\n            <p className='qTitle'>Question</p>\n            <input type='text' value={quiz.questions[i].q} onChange={(e) => handleChange('q', e.target.value)}></input>\n            <p>Answer</p>\n            <input type='text' value={quiz.questions[i].c} onChange={(e) => handleChange('c', e.target.value)}></input>\n            <p>Incorrect Answer</p>\n            <input type='text' value={quiz.questions[i].i1} onChange={(e) => handleChange('i1', e.target.value)}></input>\n            <p>Incorrect Answer</p>\n            <input type='text' value={quiz.questions[i].i2} onChange={(e) => handleChange('i2', e.target.value)}></input>\n            <p>Incorrect Answer</p>\n            <input type='text' value={quiz.questions[i].i3} onChange={(e) => handleChange('i3', e.target.value)}></input>\n            <p id='delete' onClick={() => deleteQuestion(i)}>&#215;</p>\n        </div>\n\n    );\n}\n\nfunction LooksEmpty() {\n    return (\n        <div className='noQs'>\n            <p>This looks empty; add a question?</p>\n        </div>\n    );\n}\n\nfunction AddQuestion() {\n    const { quiz, setQuiz } = useContext(QuizContext);\n\n    const addQuestion = () => {\n        let temp = JSON.parse(JSON.stringify(quiz));\n        let obj = { q: '', c: '', i1: '', i2: '', i3: '' };\n        temp.questions.push(obj);\n        setQuiz(temp);\n    };\n\n    return (\n        <div className='addQuestion' onClick={addQuestion}>\n            <p>+</p>\n        </div>\n    );\n}\n\nfunction QuizName() {\n    const { quiz, setQuiz } = useContext(QuizContext);\n\n    const handleNameChange = (change) => {\n        let temp = JSON.parse(JSON.stringify(quiz));\n        temp.name = change;\n        setQuiz(temp);\n\n    };\n\n\n    return (\n        <div className='question'>\n            <p className='qTitle'> Quiz Name </p>\n            <input type='text' value={quiz.name} onChange={(e) => handleNameChange(e.target.value)}></input>\n        </div>\n    );\n}\n\nfunction SubmitQuiz() {\n    const { socket } = useContext(GlobalContext);\n    const { quiz, setQuiz } = useContext(QuizContext);\n    const { editCode, setEditCode } = useContext(CreatorContext);\n    const { creator } = useContext(CreatorContext);\n\n    async function handleSubmitQuiz () {\n        await socket.emit('submit_quiz', { quiz: quiz, code: editCode })\n        // setEditCode('');\n    }\n    return (\n\n        <div className='submitQuiz' onClick={handleSubmitQuiz}>\n            <p>Save Quiz</p>\n        </div>\n    )\n}\n\nfunction Quiz(props) {\n    // const [quiz, setQuiz] = useState({\n    //     name: 'This Quiz',\n    //     creatorId: 0,\n    //     roomCode: 0,\n    //     questions: [\n    //         {\n    //             i2: '9',\n    //             i3: '2',\n    //             q: 'How many days are in a week?',\n    //             i1: '4',\n    //             c: '7'\n    //         },\n    //         {\n    //             i2: '16',\n    //             i1: '9',\n    //             i3: '3',\n    //             c: '12',\n    //             q: 'How many months are in a year?'\n    //         },\n    //         {\n    //             i3: 'Mt. Nash',\n    //             c: 'Mt. Everest',\n    //             q: \"What's the tallest mountain in the world?\",\n    //             i2: 'Mt. Denali',\n    //             i1: 'K2'\n    //         }\n    //     ]\n    // });\n    const [quiz, setQuiz] = useState();\n    const { editCode, setEditCode } = useContext(CreatorContext);\n    const { socket, setPage } = useContext(GlobalContext);\n\n    useEffect(() => {\n        console.log(editCode);\n        socket.emit('get_one_quiz', editCode);\n        console.log(\"asked for quiz \" + editCode);\n    }, []);\n\n    useEffect(() => {\n        socket.on('get_one_quiz', q => {\n            console.log(\"received a quiz\");\n            console.log(q);\n            setQuiz(q);\n        })\n    }, [socket, quiz, setQuiz]);\n\n    useEffect(async () => {\n         await socket.on('quizSaved', () => setPage('creator_home'));\n    }, [socket, setPage]);\n\n    // let questions = quiz.questions;\n    // console.log(`Question type is ${Array.isArray(questions)}`);\n\n    let qMap;\n    if (quiz) {\n        qMap = quiz.questions;\n    }\n    else {\n        qMap = [];\n    }\n    const questionsComp = qMap.map((q, index) => {\n        return <Question key={index} index={index}></Question>\n        // return <p>q</p>;\n    });\n    // console.log(\"is it an array?\" + Array.isArray(questionsComp));\n    return (\n        <QuizContext.Provider value={{ quiz, setQuiz }}>\n            <div className='questions'>\n                {quiz && (<QuizName></QuizName>)}\n                {quiz && questionsComp}\n                {/* {!quiz.questions[0] && (<LooksEmpty></LooksEmpty>)} */}\n                <AddQuestion></AddQuestion>\n                <SubmitQuiz></SubmitQuiz>\n                <br></br>\n            </div>\n        </QuizContext.Provider>\n    );\n}\n\nexport default Quiz;","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/Box.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/index.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/GameHeader.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/UserName.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/JoinForm.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/BackButton.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/UserScore.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/Nav.js",["190"],"import GlobalContext from '../GlobalContext';\nimport { React, useContext } from 'react';\n\nfunction Nav(props) {\n\n    const { page, setPage } = useContext(GlobalContext);\n\n    const name = props.name;\n    const action = props.action;\n    const onPage = props.on;\n    const classname = 'link_nav ' + onPage;\n    let navigation = <li onClick={() => setPage(action.toLowerCase())} className={classname}>{name}</li>\n    // let thisBox = <div onClick={() => setPage(action.toLowerCase())} className={classname}><p>{name}</p></div>;\n    return navigation;\n}\n\nexport default Nav;","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/GameButton.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/UserRank.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/QuizBox.js",["191","192","193"],"import { React, useContext, useState, createContext, useEffect } from 'react';\nimport GlobalContext from '../GlobalContext';\nimport CreatorContext from '../context/CreatorContext';\n\n// const QuestionContext= createContext();\nconst QuizContext = createContext();\nfunction QuizBox(props) {\n    const { page, setPage } = useContext(GlobalContext);\n    const { socket } = useContext(GlobalContext);\n    const { creator } = useContext(CreatorContext);\n    const [quizzes, setQuizzes] = useState('');\n    const quizInfo = { quizzes, setQuizzes };\n\n    console.log(creator)\n    socket.emit('get_quizzes', { 'creator': creator })\n\n    useEffect(() => {\n        socket.once(\"get_quizzes\", function (data) {\n            console.log(data)\n            \n\n            setQuizzes(data.quiz_arr);\n        });\n    }, [socket, setPage]);\n    // const [state, dispatch] = useGlobalState();\n    \n\n    // let questionBox = <div className={classname}><p>{q_text_value}</p></div>;\n\n    return (\n        <div>\n            <QuizContext.Provider value={quizInfo}>\n                <ClickableQuizzes></ClickableQuizzes>\n            </QuizContext.Provider>\n        </div>\n    );\n}\n\nfunction Quiz(props) {\n    function handleQuizClick (){\n        console.log('The quiz you clicked on is ' + props.quiz_name)\n        console.log('It\\'s object is ' + JSON.stringify(props.quiz_obj))\n    }\n    return (\n        <div className = 'quiz_box' onClick={handleQuizClick}>\n            {props.quiz_name}\n        </div>\n    )\n}\n\nfunction ClickableQuizzes(props) {\n    const { socket } = useContext(GlobalContext);\n    const { quizzes } = useContext(QuizContext);\n    console.log(quizzes)\n    // const { count, setCount, q_object, setQ_Object } = useContext(QuestionContext);\n    function handleQuizClick (){\n        // socket.emit('')\n        console.log('The quiz you clicked is ' + props.quiz_name)\n    }\n    const div_quizzes = Object.keys(quizzes).map(key =>\n\n        \n        <Quiz key={key} quiz_name={quizzes[key].quiz_name} quiz_obj={quizzes[key]}></Quiz>\n\n\n    )\n    return div_quizzes;\n\n}\nexport default QuizBox;","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/NameForm.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/QuestionBox.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"import { React, useContext, useState, createContext, useEffect } from 'react';\nimport GlobalContext from '../GlobalContext';\nimport CreatorContext from '../context/CreatorContext';\n\nconst QuestionContext = createContext();\nfunction QuestionBox(props) {\n    // const [state, dispatch] = useGlobalState();\n    const { page, setPage } = useContext(GlobalContext);\n    const [count, setCount] = useState(0);\n    const [q_object, setQ_Object] = useState({\n        'Question 0': {\n            'question': '',\n            'answers': {\n                'correct': '',\n                'incorrect1': '',\n                'incorrect2': '',\n                'incorrect3': ''\n            }\n        }\n    });\n\n    const [q_object_store, setQ_Object_Store] = useState({\n        'Question 0': {\n            'question': '',\n            'answers': {\n                'correct': '',\n                'incorrect1': '',\n                'incorrect2': '',\n                'incorrect3': ''\n            }\n        }\n    });\n    const [quiz_name, setQuizName] = useState('');\n    const questionInfo = { count, setCount, q_object, setQ_Object, q_object_store, setQ_Object_Store, quiz_name, setQuizName };\n\n    // let questionBox = <div className={classname}><p>{q_text_value}</p></div>;\n\n    return (\n        <div>\n            <QuestionContext.Provider value={questionInfo}>\n                <NameQuiz></NameQuiz>\n                <AddQuestion></AddQuestion>\n                <ClickedComponents></ClickedComponents>\n                <SubmitQuiz></SubmitQuiz>\n            </QuestionContext.Provider>\n        </div>\n    );\n}\n\nfunction ClickedComponents(props) {\n    const { count, setCount, q_object, setQ_Object } = useContext(QuestionContext);\n    const questions = Object.keys(q_object).map(key =>\n\n        <div key={key}>\n            <p>{key}</p>\n            {q_object[key].question} <br></br>\n            <p>Correct Answer</p>\n            {q_object[key].answers.correct}\n            <p>Incorrect Answers</p>\n            {q_object[key].answers.incorrect1} <br></br>\n            {q_object[key].answers.incorrect2} <br></br>\n            {q_object[key].answers.incorrect3} <br></br>\n        </div>\n\n\n    )\n    return questions;\n}\n\nfunction ComponentA(props) {\n    const { count, setCount, q_object, setQ_Object, setQ_Object_Store } = useContext(QuestionContext);\n    const [curQues, setCurQues] = useState('');\n    // let numQues = '';\n\n    function handleChange(e) {\n        let numQues = \"Question \" + curQues;\n        console.log(\"set question \" + numQues + \" to \" + e.target.value)\n        // let quesObj = \n        setQ_Object(prevObject => ({ ...prevObject, [numQues]: { ...prevObject[numQues], 'question': <ComponentA value={e.target.value} num_ques={curQues} /> } }));\n        // let numQues = \"Question \" + curQues;\n        // console.log(\"set question \" + numQues + \" to \" + e.target.value)\n        // let quesObj = \n        setQ_Object_Store(prevObject => ({ ...prevObject, [numQues]: { ...prevObject[numQues], 'question': e.target.value } }));\n    }\n\n\n    let quesName = 'creator_question ' + props.num_ques;\n    // let quesName = 'creator_answer ' + props.num_ques;\n    return (\n        <div>\n\n            <input type='text' onChange={n => handleChange(n)} onClick={() => setCurQues(props.num_ques)}\n                className={quesName}></input>\n\n        </div>\n\n    );\n}\n\nfunction ComponentB(props) {\n    const { count, setCount, q_object, setQ_Object, setQ_Object_Store } = useContext(QuestionContext);\n    const [curQues, setCurQues] = useState('');\n\n\n    // let numQues = '';\n    //User effect so we know that we change current answer\n    //before we do anything else on screen\n\n\n    function handleAnswerChange(e) {\n        let numQues = \"Question \" + curQues;\n        console.log(\"set correct answer of\" + numQues + \" to \" + e.target.value)\n\n        //... is when we spread the object to make sure that the rest of \n        //the object is still instact when we set it to something else (our input)\n        setQ_Object(prevObject => ({\n            ...prevObject,\n            [numQues]: {\n                ...prevObject[numQues],\n                answers: {\n                    ...prevObject[numQues].answers,\n                    correct: <ComponentB value={e.target.value} num_ques={curQues} />,\n                }\n            }\n        }));\n\n        setQ_Object_Store(prevObject => ({\n            ...prevObject,\n            [numQues]: {\n                ...prevObject[numQues],\n                answers: {\n                    ...prevObject[numQues].answers,\n                    correct: e.target.value\n                }\n            }\n        }));\n        // console.log(\"set answer \" + curAns + \" of\" + numQues + \" to \" + q_object[numQues].answers.letter_ans.props)\n    }\n    // let quesName = 'creator_question ' + props.num_ques;\n    // let quesName = 'creator_answer ' + props.letter_ans\n\n\n    return (\n        <div>\n            <input type='text' onChange={n => handleAnswerChange(n)}\n                onClick={() => setCurQues(props.num_ques)}\n                className='correct_ans'></input> <br></br> <br></br>\n        </div>\n\n    );\n}\n\nfunction ComponentC(props) {\n    const { count, setCount, q_object, setQ_Object, setQ_Object_Store } = useContext(QuestionContext);\n    const [curQues, setCurQues] = useState('');\n\n\n    // let numQues = '';\n    //User effect so we know that we change current answer\n    //before we do anything else on screen\n\n\n    function handleIncAnswerChange(e) {\n        let numQues = \"Question \" + curQues;\n\n        let numInc = 'incorrect' + props.num_inc;\n        console.log(\"set \" + numInc + \" of\" + numQues + \" to \" + e.target.value)\n        //... is when we spread the object to make sure that the rest of \n        //the object is still instact when we set it to something else (our input)\n        setQ_Object(prevObject => ({\n            ...prevObject,\n            [numQues]: {\n                ...prevObject[numQues],\n                answers: {\n                    ...prevObject[numQues].answers,\n                    [numInc]: <ComponentC value={e.target.value} num_ques={curQues} num_inc={props.num_inc} />,\n                }\n            }\n        }));\n\n        setQ_Object_Store(prevObject => ({\n            ...prevObject,\n            [numQues]: {\n                ...prevObject[numQues],\n                answers: {\n                    ...prevObject[numQues].answers,\n                    [numInc]: e.target.value\n                }\n            }\n        }));\n    }\n    // let quesName = 'creator_question ' + props.num_ques;\n    // let quesName = 'creator_answer ' + props.letter_ans\n\n\n    return (\n        <div>\n            <input type='text' onChange={n => handleIncAnswerChange(n)}\n                onClick={() => setCurQues(props.num_ques)} className='inc_correct_ans'></input> <br></br>\n        </div>\n\n    );\n}\n\n\n\nfunction AddQuestion() {\n    const { count, setCount, q_object_store, setQ_Object, setQ_Object_Store, q_object } = useContext(QuestionContext);\n    function handleAddButton() {\n        setCount(count + 1)\n\n    }\n    useEffect(() => {\n        let newQues = \"Question \" + count;\n        // console.log(newQues);\n        setQ_Object(prevObject => ({\n            ...prevObject,\n            [newQues]: {\n                'question': <ComponentA num_ques={count} />,\n                'answers': {\n                    'correct': <ComponentB num_ques={count} num_inc='' />,\n\n                    'incorrect1': <ComponentC num_ques={count} num_inc='1' />,\n                    'incorrect2': <ComponentC num_ques={count} num_inc='2' />,\n                    'incorrect3': <ComponentC num_ques={count} num_inc='3' />\n                }\n            }\n        }\n        )\n        );\n        setQ_Object_Store(prevObject => ({\n            ...prevObject,\n            [newQues]: {\n                'question': '',\n                'answers': {\n                    'correct': '',\n\n                    'incorrect1': '',\n                    'incorrect2': '',\n                    'incorrect3': ''\n                }\n            }\n        }\n        )\n        );\n\n\n        // console.log(count)\n        // console.log(q_object_store)\n        // console.log(q_object)\n    }, [count])\n\n    return (\n        <button onClick={handleAddButton}>Add Question</button>\n    )\n}\n\nfunction NameQuiz() {\n    const { quiz_name, setQuizName } = useContext(QuestionContext);\n    function handleNameQuiz(e) {\n        setQuizName(e.target.value)\n    }\n    function handleSubmitName() {\n        console.log(quiz_name);\n    }\n    return (\n        <div>\n            <label>Name Quiz: </label><input type='text' onChange={handleNameQuiz}></input>\n            {/* <button onClick={handleSubmitName}>Save Name </button> */}\n        </div>\n    )\n}\n\nfunction SubmitQuiz() {\n    const { page, setPage, socket } = useContext(GlobalContext);\n    const { q_object_store, quiz_name } = useContext(QuestionContext);\n    const { creator } = useContext(CreatorContext);\n    function handleSubmitQuiz() {\n        console.log(\"The name of your quiz is \" + quiz_name)\n        console.log('The creator id of the quiz is ' + creator)\n        console.log(q_object_store);\n\n        socket.emit('submit_quiz', { 'quiz': q_object_store, 'quiz_name': quiz_name, creator: creator })\n\n\n    }\n\n    useEffect(() => {\n        // socket.\n    })\n    return (\n\n        <button onClick={handleSubmitQuiz}>Submit Quiz</button>\n    )\n}\n\nexport default QuestionBox;","/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/items/GameButtons.js",[],"/Users/nashsolon/Desktop/CS_330/creativeproject-477477-475454/client/src/components/pages/ManageGames.js",["214","215"],"import { Nav, QuizBox } from '../items';\nimport { React, useEffect, useContext, useState } from 'react' \nimport GlobalContext from '../GlobalContext';\nimport CreatorContext from '../context/CreatorContext';\n\n\n// import React from 'react';\n\nfunction ManagerHeader(){\n    // const { page, setPage } = useContext(GlobalContext);\n    const {creator} = useContext(CreatorContext)\n    const {socket, setPage} = useContext(GlobalContext)\n    const [creator_name, setName] = useState('')\n    socket.emit('getUsername', {creator: creator})\n\n    useEffect(() => {\n        socket.on('getUsername', (data) => {\n            console.log(data)\n            console.log('Your display name is ' + data.user_obj.displayName)\n            setName(data.user_obj.displayName)\n\n        })\n    }, [socket])\n\n    let header_text = creator_name + '\\'s quizzes' \n\n    return(\n        <div>\n            {header_text}\n        </div>\n    )\n}\n\nfunction ManageGames(props) {\n    \n\n    return (\n        <div>\n            <div>\n                <ManagerHeader></ManagerHeader>\n            </div>\n            <div id=\"quizzes\">\n                <QuizBox></QuizBox>\n            </div>\n        </div>\n    );\n}\n\nexport default ManageGames;",{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":3,"column":101,"nodeType":"222","messageId":"223","endLine":3,"endColumn":111},{"ruleId":"220","severity":1,"message":"224","line":9,"column":12,"nodeType":"222","messageId":"223","endLine":9,"endColumn":23},{"ruleId":"220","severity":1,"message":"225","line":13,"column":13,"nodeType":"222","messageId":"223","endLine":13,"endColumn":20},{"ruleId":"220","severity":1,"message":"226","line":17,"column":14,"nodeType":"222","messageId":"223","endLine":17,"endColumn":24},{"ruleId":"227","severity":1,"message":"228","line":55,"column":8,"nodeType":"229","endLine":55,"endColumn":25,"suggestions":"230"},{"ruleId":"220","severity":1,"message":"231","line":1,"column":10,"nodeType":"222","messageId":"223","endLine":1,"endColumn":13},{"ruleId":"220","severity":1,"message":"232","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":19},{"ruleId":"220","severity":1,"message":"233","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":12},{"ruleId":"220","severity":1,"message":"234","line":18,"column":22,"nodeType":"222","messageId":"223","endLine":18,"endColumn":32},{"ruleId":"220","severity":1,"message":"235","line":20,"column":11,"nodeType":"222","messageId":"223","endLine":20,"endColumn":16},{"ruleId":"220","severity":1,"message":"236","line":97,"column":21,"nodeType":"222","messageId":"223","endLine":97,"endColumn":25},{"ruleId":"220","severity":1,"message":"237","line":97,"column":27,"nodeType":"222","messageId":"223","endLine":97,"endColumn":34},{"ruleId":"220","severity":1,"message":"234","line":98,"column":22,"nodeType":"222","messageId":"223","endLine":98,"endColumn":32},{"ruleId":"220","severity":1,"message":"238","line":98,"column":34,"nodeType":"222","messageId":"223","endLine":98,"endColumn":42},{"ruleId":"220","severity":1,"message":"239","line":98,"column":44,"nodeType":"222","messageId":"223","endLine":98,"endColumn":55},{"ruleId":"220","severity":1,"message":"240","line":101,"column":13,"nodeType":"222","messageId":"223","endLine":101,"endColumn":17},{"ruleId":"220","severity":1,"message":"236","line":113,"column":21,"nodeType":"222","messageId":"223","endLine":113,"endColumn":25},{"ruleId":"227","severity":1,"message":"241","line":128,"column":8,"nodeType":"229","endLine":128,"endColumn":10,"suggestions":"242"},{"ruleId":"227","severity":1,"message":"243","line":136,"column":8,"nodeType":"229","endLine":136,"endColumn":29,"suggestions":"244"},{"ruleId":"220","severity":1,"message":"245","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"246","line":35,"column":22,"nodeType":"222","messageId":"223","endLine":35,"endColumn":28},{"ruleId":"220","severity":1,"message":"247","line":28,"column":18,"nodeType":"222","messageId":"223","endLine":28,"endColumn":25},{"ruleId":"220","severity":1,"message":"248","line":29,"column":19,"nodeType":"222","messageId":"223","endLine":29,"endColumn":27},{"ruleId":"220","severity":1,"message":"249","line":49,"column":21,"nodeType":"222","messageId":"223","endLine":49,"endColumn":31},{"ruleId":"220","severity":1,"message":"250","line":46,"column":10,"nodeType":"222","messageId":"223","endLine":46,"endColumn":20},{"ruleId":"220","severity":1,"message":"251","line":92,"column":19,"nodeType":"222","messageId":"223","endLine":92,"endColumn":26},{"ruleId":"220","severity":1,"message":"252","line":93,"column":23,"nodeType":"222","messageId":"223","endLine":93,"endColumn":34},{"ruleId":"220","severity":1,"message":"225","line":94,"column":13,"nodeType":"222","messageId":"223","endLine":94,"endColumn":20},{"ruleId":"220","severity":1,"message":"252","line":138,"column":23,"nodeType":"222","messageId":"223","endLine":138,"endColumn":34},{"ruleId":"227","severity":1,"message":"253","line":145,"column":8,"nodeType":"229","endLine":145,"endColumn":10,"suggestions":"254"},{"ruleId":"227","severity":1,"message":"255","line":155,"column":15,"nodeType":"256","endLine":157,"endColumn":6},{"ruleId":"220","severity":1,"message":"236","line":6,"column":13,"nodeType":"222","messageId":"223","endLine":6,"endColumn":17},{"ruleId":"220","severity":1,"message":"236","line":8,"column":13,"nodeType":"222","messageId":"223","endLine":8,"endColumn":17},{"ruleId":"220","severity":1,"message":"246","line":52,"column":13,"nodeType":"222","messageId":"223","endLine":52,"endColumn":19},{"ruleId":"220","severity":1,"message":"257","line":56,"column":14,"nodeType":"222","messageId":"223","endLine":56,"endColumn":29},{"ruleId":"220","severity":1,"message":"236","line":8,"column":13,"nodeType":"222","messageId":"223","endLine":8,"endColumn":17},{"ruleId":"220","severity":1,"message":"237","line":8,"column":19,"nodeType":"222","messageId":"223","endLine":8,"endColumn":26},{"ruleId":"220","severity":1,"message":"258","line":51,"column":13,"nodeType":"222","messageId":"223","endLine":51,"endColumn":18},{"ruleId":"220","severity":1,"message":"259","line":51,"column":20,"nodeType":"222","messageId":"223","endLine":51,"endColumn":28},{"ruleId":"220","severity":1,"message":"260","line":51,"column":40,"nodeType":"222","messageId":"223","endLine":51,"endColumn":51},{"ruleId":"220","severity":1,"message":"258","line":71,"column":13,"nodeType":"222","messageId":"223","endLine":71,"endColumn":18},{"ruleId":"220","severity":1,"message":"259","line":71,"column":20,"nodeType":"222","messageId":"223","endLine":71,"endColumn":28},{"ruleId":"220","severity":1,"message":"261","line":71,"column":30,"nodeType":"222","messageId":"223","endLine":71,"endColumn":38},{"ruleId":"220","severity":1,"message":"258","line":101,"column":13,"nodeType":"222","messageId":"223","endLine":101,"endColumn":18},{"ruleId":"220","severity":1,"message":"259","line":101,"column":20,"nodeType":"222","messageId":"223","endLine":101,"endColumn":28},{"ruleId":"220","severity":1,"message":"261","line":101,"column":30,"nodeType":"222","messageId":"223","endLine":101,"endColumn":38},{"ruleId":"220","severity":1,"message":"258","line":154,"column":13,"nodeType":"222","messageId":"223","endLine":154,"endColumn":18},{"ruleId":"220","severity":1,"message":"259","line":154,"column":20,"nodeType":"222","messageId":"223","endLine":154,"endColumn":28},{"ruleId":"220","severity":1,"message":"261","line":154,"column":30,"nodeType":"222","messageId":"223","endLine":154,"endColumn":38},{"ruleId":"220","severity":1,"message":"262","line":208,"column":30,"nodeType":"222","messageId":"223","endLine":208,"endColumn":44},{"ruleId":"220","severity":1,"message":"261","line":208,"column":78,"nodeType":"222","messageId":"223","endLine":208,"endColumn":86},{"ruleId":"227","severity":1,"message":"263","line":251,"column":8,"nodeType":"229","endLine":251,"endColumn":15,"suggestions":"264"},{"ruleId":"220","severity":1,"message":"265","line":263,"column":14,"nodeType":"222","messageId":"223","endLine":263,"endColumn":30},{"ruleId":"220","severity":1,"message":"236","line":275,"column":13,"nodeType":"222","messageId":"223","endLine":275,"endColumn":17},{"ruleId":"220","severity":1,"message":"237","line":275,"column":19,"nodeType":"222","messageId":"223","endLine":275,"endColumn":26},{"ruleId":"220","severity":1,"message":"231","line":1,"column":10,"nodeType":"222","messageId":"223","endLine":1,"endColumn":13},{"ruleId":"220","severity":1,"message":"237","line":12,"column":20,"nodeType":"222","messageId":"223","endLine":12,"endColumn":27},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"no-unused-vars","'CreateGame' is defined but never used.","Identifier","unusedVar","'signin_user' is assigned a value but never used.","'creator' is assigned a value but never used.","'handleUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCreator'. Either include it or remove the dependency array.","ArrayExpression",["268"],"'Nav' is defined but never used.","'UserContext' is defined but never used.","'Quiz' is defined but never used.","'setQuizzes' is assigned a value but never used.","'click' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'setPopup' is assigned a value but never used.","'setPopIndex' is assigned a value but never used.","'temp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'creator' and 'socket'. Either include them or remove the dependency array.",["269"],"React Hook useEffect has a missing dependency: 'setPage'. Either include it or remove the dependency array.",["270"],"'useEffect' is defined but never used.","'socket' is assigned a value but never used.","'setRank' is assigned a value but never used.","'setScore' is assigned a value but never used.","'setCorrect' is assigned a value but never used.","'LooksEmpty' is defined but never used.","'setQuiz' is assigned a value but never used.","'setEditCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editCode' and 'socket'. Either include them or remove the dependency array.",["271"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'handleQuizClick' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'setQ_Object' is assigned a value but never used.","'q_object' is assigned a value but never used.","'q_object_store' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setQ_Object' and 'setQ_Object_Store'. Either include them or remove the dependency array.",["272"],"'handleSubmitName' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [socket, setPage, setCreator]",{"range":"283","text":"284"},"Update the dependencies array to be: [creator, socket]",{"range":"285","text":"286"},"Update the dependencies array to be: [socket, setEditCode, setPage]",{"range":"287","text":"288"},"Update the dependencies array to be: [editCode, socket]",{"range":"289","text":"290"},"Update the dependencies array to be: [count, setQ_Object, setQ_Object_Store]",{"range":"291","text":"292"},[1929,1946],"[socket, setPage, setCreator]",[4194,4196],"[creator, socket]",[4411,4432],"[socket, setEditCode, setPage]",[4427,4429],"[editCode, socket]",[8178,8185],"[count, setQ_Object, setQ_Object_Store]"]